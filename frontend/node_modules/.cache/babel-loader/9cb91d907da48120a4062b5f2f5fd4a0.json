{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hcampos/Documents/REACT/shop.io/frontend/src/stripe/checkout-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useStore } from \"../stores\";\nimport { Button, BUTTON_COLOR } from \"../components/button/button\";\nimport './checkout-form.scss';\nexport const CheckoutForm = props => {\n  _s();\n\n  const store = useStore();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (stripe && elements) {\n      const {\n        error,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement)\n      });\n\n      if (!error) {\n        if (paymentMethod) {\n          if (await store.orderStore.pay(paymentMethod.id, props.amount)) {\n            props.onPaySuccess();\n          }\n        }\n      } else {\n        console.log(error.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `checkout-form ${props.shown ? 'shown' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: BUTTON_COLOR.ORANGE,\n          onClick: props.onCancelButtonClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckoutForm, \"9i41qVfe03HqprKYi5JkfXMX9Og=\", false, function () {\n  return [useStore, useStripe, useElements];\n});\n\n_c = CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/hcampos/Documents/REACT/shop.io/frontend/src/stripe/checkout-form.tsx"],"names":["React","CardElement","useStripe","useElements","useStore","Button","BUTTON_COLOR","CheckoutForm","props","store","stripe","elements","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","orderStore","pay","id","amount","onPaySuccess","console","log","message","shown","ORANGE","onCancelButtonClick"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,6BAArC;AAEA,OAAO,sBAAP;AASA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAA8B;AAAA;;AACtD,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;AAEA,QAAMM,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,YAAY,GAAG,MAAOC,KAAP,IAAmD;AACpEA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,MAAM,IAAIC,QAAd,EAAwB;AACpB,YAAM;AAAEI,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAA2B,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAC9DC,QAAAA,IAAI,EAAE,MADwD;AAE9DC,QAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoBnB,WAApB;AAFwD,OAA3B,CAAvC;;AAKA,UAAI,CAACc,KAAL,EAAY;AACR,YAAIC,aAAJ,EAAmB;AACf,cAAI,MAAMP,KAAK,CAACY,UAAN,CAAiBC,GAAjB,CAAqBN,aAAa,CAACO,EAAnC,EAAuCf,KAAK,CAACgB,MAA7C,CAAV,EAAgE;AAC5DhB,YAAAA,KAAK,CAACiB,YAAN;AACH;AACJ;AACJ,OAND,MAMO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,OAAlB;AACH;AACJ;AACJ,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAG,iBAAgBpB,KAAK,CAACqB,KAAN,GAAc,OAAd,GAAwB,EAAG,EAA5D;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEjB,YAAhB;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEN,YAAY,CAACwB,MAA5B;AAAoC,UAAA,OAAO,EAAEtB,KAAK,CAACuB,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAvCM;;GAAMxB,Y;UACKH,Q,EAECF,S,EACEC,W;;;KAJRI,Y","sourcesContent":["import React from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useStore } from \"../stores\";\nimport { Button, BUTTON_COLOR } from \"../components/button/button\";\n\nimport './checkout-form.scss';\n\ninterface CheckoutFormProps {\n    amount: number;\n    shown: boolean;\n    onCancelButtonClick: () => void;\n    onPaySuccess: () => void;\n}\n\nexport const CheckoutForm = (props: CheckoutFormProps) => {\n    const store = useStore();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (stripe && elements) {\n            const { error, paymentMethod } = await stripe.createPaymentMethod({\n                type: \"card\",\n                card: elements.getElement(CardElement)!,\n            });\n    \n            if (!error) {\n                if (paymentMethod) {\n                    if (await store.orderStore.pay(paymentMethod.id, props.amount)) {\n                        props.onPaySuccess();\n                    }\n                }\n            } else {\n                console.log(error.message);\n            }\n        }\n    };\n\n    return (\n        <div className={`checkout-form ${props.shown ? 'shown' : ''}`}>\n            <form onSubmit={handleSubmit}>\n                <CardElement />\n                <div className=\"buttons\">\n                    <Button color={BUTTON_COLOR.ORANGE} onClick={props.onCancelButtonClick}>\n                        Cancel\n                    </Button>\n                    <button>Pay</button>\n                </div>\n            </form>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}