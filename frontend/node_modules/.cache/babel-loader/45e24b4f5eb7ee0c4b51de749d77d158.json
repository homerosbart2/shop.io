{"ast":null,"code":"import { makeAutoObservable, runInAction } from 'mobx';\nimport { getApi, postApi } from '../util/http';\nexport class UserStore {\n  constructor() {\n    this.user = void 0;\n    this.isShowing = false;\n    this.isCreating = false;\n\n    this.show = async userEmail => {\n      this.isShowing = true;\n      const response = await getApi(`${this.path}/${userEmail}`);\n      runInAction(() => {\n        if (response.successful && response.data) {\n          this.user = response.data;\n        }\n      });\n      this.isShowing = false;\n      return response.successful;\n    };\n\n    this.create = async user => {\n      this.isCreating = true;\n      const response = await postApi(this.path, user);\n      runInAction(() => {\n        if (response.successful && response.data) {\n          this.user = response.data;\n        }\n      });\n      this.isCreating = false;\n      return response.successful;\n    };\n\n    makeAutoObservable(this);\n  }\n\n  get path() {\n    return 'user';\n  }\n\n}","map":{"version":3,"sources":["/Users/hcampos/Documents/REACT/shop.io/frontend/src/stores/user-store.ts"],"names":["makeAutoObservable","runInAction","getApi","postApi","UserStore","constructor","user","isShowing","isCreating","show","userEmail","response","path","successful","data","create"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,WAA7B,QAAgD,MAAhD;AAEA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,cAAhC;AAEA,OAAO,MAAMC,SAAN,CAAgB;AAKnBC,EAAAA,WAAW,GAAG;AAAA,SAJdC,IAIc;AAAA,SAHdC,SAGc,GAHF,KAGE;AAAA,SAFdC,UAEc,GAFD,KAEC;;AAAA,SAQdC,IARc,GAQP,MAAOC,SAAP,IAAoC;AACvC,WAAKH,SAAL,GAAiB,IAAjB;AAEA,YAAMI,QAAQ,GAAG,MAAMT,MAAM,CAAQ,GAAE,KAAKU,IAAK,IAAGF,SAAU,EAAjC,CAA7B;AACAT,MAAAA,WAAW,CAAC,MAAM;AACd,YAAIU,QAAQ,CAACE,UAAT,IAAuBF,QAAQ,CAACG,IAApC,EAA0C;AACtC,eAAKR,IAAL,GAAYK,QAAQ,CAACG,IAArB;AACH;AACJ,OAJU,CAAX;AAMA,WAAKP,SAAL,GAAiB,KAAjB;AAEA,aAAOI,QAAQ,CAACE,UAAhB;AACH,KArBa;;AAAA,SAuBdE,MAvBc,GAuBL,MAAOT,IAAP,IAAsB;AAC3B,WAAKE,UAAL,GAAkB,IAAlB;AAEA,YAAMG,QAAQ,GAAG,MAAMR,OAAO,CAAO,KAAKS,IAAZ,EAAkBN,IAAlB,CAA9B;AACAL,MAAAA,WAAW,CAAC,MAAM;AACd,YAAIU,QAAQ,CAACE,UAAT,IAAuBF,QAAQ,CAACG,IAApC,EAA0C;AACtC,eAAKR,IAAL,GAAYK,QAAQ,CAACG,IAArB;AACH;AACJ,OAJU,CAAX;AAMA,WAAKN,UAAL,GAAkB,KAAlB;AAEA,aAAOG,QAAQ,CAACE,UAAhB;AACH,KApCa;;AACVb,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,MAAIY,IAAJ,GAAW;AACP,WAAO,MAAP;AACH;;AAXkB","sourcesContent":["import { makeAutoObservable, runInAction } from 'mobx';\nimport type { User } from '../types/user';\nimport { getApi, postApi } from '../util/http';\n\nexport class UserStore {\n    user?: User;\n    isShowing = false;\n    isCreating = false;\n    \n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    get path() {\n        return 'user';\n    }\n\n    show = async (userEmail: User['email']) => {\n        this.isShowing = true;\n\n        const response = await getApi<User>(`${this.path}/${userEmail}`);\n        runInAction(() => {\n            if (response.successful && response.data) {\n                this.user = response.data;\n            }\n        });\n\n        this.isShowing = false;\n        \n        return response.successful;\n    }\n\n    create = async (user: User) => {\n        this.isCreating = true;\n\n        const response = await postApi<User>(this.path, user);\n        runInAction(() => {\n            if (response.successful && response.data) {\n                this.user = response.data;\n            }\n        });\n\n        this.isCreating = false;\n\n        return response.successful;\n    }\n}"]},"metadata":{},"sourceType":"module"}