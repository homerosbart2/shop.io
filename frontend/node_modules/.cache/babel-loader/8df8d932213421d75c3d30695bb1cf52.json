{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hcampos/Documents/REACT/shop.io/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hcampos/Documents/REACT/shop.io/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hcampos/Documents/REACT/shop.io/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import{CardElement,useStripe,useElements}from'@stripe/react-stripe-js';import{useStore}from'../stores';import{Button,BUTTON_COLOR}from'../components/button/button';import{LoadingSpinner}from'../components/loading-spinner/loading-spinner';import'./checkout-form.scss';import{observer}from'mobx-react';export var CheckoutForm=observer(function(props){var store=useStore();var isPaying=store.orderStore.isPaying||store.orderStore.isCreating;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),complete=_useState2[0],setComplete=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isCreatingPaymentMethod=_useState4[0],setIsCreatingPaymentMethod=_useState4[1];var stripe=useStripe();var elements=useElements();var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var _yield$stripe$createP,error,paymentMethod;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(stripe&&elements)){_context.next=18;break;}setIsCreatingPaymentMethod(true);_context.next=5;return stripe.createPaymentMethod({type:\"card\",card:elements.getElement(CardElement)});case 5:_yield$stripe$createP=_context.sent;error=_yield$stripe$createP.error;paymentMethod=_yield$stripe$createP.paymentMethod;setIsCreatingPaymentMethod(false);if(error){_context.next=17;break;}if(!paymentMethod){_context.next=15;break;}_context.next=13;return store.orderStore.pay(paymentMethod.id,props.amount);case 13:if(!_context.sent){_context.next=15;break;}props.onPaySuccess();case 15:_context.next=18;break;case 17:console.log(error.message);case 18:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();var handleChange=function handleChange(_ref2){var complete=_ref2.complete;setComplete(complete);};return/*#__PURE__*/_jsx(\"div\",{className:\"checkout-form \".concat(props.shown?'shown':''),children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(CardElement,{onChange:handleChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(Button,{color:BUTTON_COLOR.ORANGE,onClick:props.onCancelButtonClick,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:complete?'':'disabled',children:isPaying||isCreatingPaymentMethod?/*#__PURE__*/_jsx(LoadingSpinner,{}):'Pay'})]})]})});});","map":{"version":3,"sources":["/Users/hcampos/Documents/REACT/shop.io/frontend/src/stripe/checkout-form.tsx"],"names":["React","useState","CardElement","useStripe","useElements","useStore","Button","BUTTON_COLOR","LoadingSpinner","observer","CheckoutForm","props","store","isPaying","orderStore","isCreating","complete","setComplete","isCreatingPaymentMethod","setIsCreatingPaymentMethod","stripe","elements","handleSubmit","event","preventDefault","createPaymentMethod","type","card","getElement","error","paymentMethod","pay","id","amount","onPaySuccess","console","log","message","handleChange","shown","ORANGE","onCancelButtonClick"],"mappings":"ukBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,WAAjC,KAAoD,yBAApD,CACA,OAASC,QAAT,KAAyB,WAAzB,CACA,OAASC,MAAT,CAAiBC,YAAjB,KAAqC,6BAArC,CACA,OAASC,cAAT,KAA+B,+CAA/B,CAEA,MAAO,sBAAP,CAEA,OAASC,QAAT,KAAyB,YAAzB,CASA,MAAO,IAAMC,CAAAA,YAAY,CAAGD,QAAQ,CAAC,SAACE,KAAD,CAA8B,CAC/D,GAAMC,CAAAA,KAAK,CAAGP,QAAQ,EAAtB,CACA,GAAMQ,CAAAA,QAAQ,CAAGD,KAAK,CAACE,UAAN,CAAiBD,QAAjB,EAA6BD,KAAK,CAACE,UAAN,CAAiBC,UAA/D,CAF+D,cAG/Bd,QAAQ,CAAU,KAAV,CAHuB,wCAGxDe,QAHwD,eAG9CC,WAH8C,8BAIDhB,QAAQ,CAAU,KAAV,CAJP,yCAIxDiB,uBAJwD,eAI/BC,0BAJ+B,eAM/D,GAAMC,CAAAA,MAAM,CAAGjB,SAAS,EAAxB,CACA,GAAMkB,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CAEA,GAAMkB,CAAAA,YAAY,0FAAG,iBAAOC,KAAP,gKACjBA,KAAK,CAACC,cAAN,GADiB,KAEbJ,MAAM,EAAIC,QAFG,2BAGbF,0BAA0B,CAAC,IAAD,CAA1B,CAHa,sBAI0BC,CAAAA,MAAM,CAACK,mBAAP,CAA2B,CAC9DC,IAAI,CAAE,MADwD,CAE9DC,IAAI,CAAEN,QAAQ,CAACO,UAAT,CAAoB1B,WAApB,CAFwD,CAA3B,CAJ1B,4CAIL2B,KAJK,uBAILA,KAJK,CAIEC,aAJF,uBAIEA,aAJF,CAQbX,0BAA0B,CAAC,KAAD,CAA1B,CARa,GAURU,KAVQ,8BAWLC,aAXK,iDAYKlB,CAAAA,KAAK,CAACE,UAAN,CAAiBiB,GAAjB,CAAqBD,aAAa,CAACE,EAAnC,CAAuCrB,KAAK,CAACsB,MAA7C,CAZL,oDAaDtB,KAAK,CAACuB,YAAN,GAbC,uCAiBTC,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,OAAlB,EAjBS,uDAAH,kBAAZf,CAAAA,YAAY,4CAAlB,CAsBA,GAAMgB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,OAAgD,IAA7CtB,CAAAA,QAA6C,OAA7CA,QAA6C,CACjEC,WAAW,CAACD,QAAD,CAAX,CACH,CAFD,CAIA,mBACI,YAAK,SAAS,yBAAmBL,KAAK,CAAC4B,KAAN,CAAc,OAAd,CAAwB,EAA3C,CAAd,uBACI,cAAM,QAAQ,CAAEjB,YAAhB,wBACI,KAAC,WAAD,EAAa,QAAQ,CAAEgB,YAAvB,EADJ,cAEI,aAAK,SAAS,CAAC,SAAf,wBACI,KAAC,MAAD,EAAQ,KAAK,CAAE/B,YAAY,CAACiC,MAA5B,CAAoC,OAAO,CAAE7B,KAAK,CAAC8B,mBAAnD,oBADJ,cAII,eAAQ,SAAS,CAAEzB,QAAQ,CAAG,EAAH,CAAQ,UAAnC,UACMH,QAAQ,EAAIK,uBAAb,cAAwC,KAAC,cAAD,IAAxC,CAA4D,KADjE,EAJJ,GAFJ,GADJ,EADJ,CAeH,CAlDmC,CAA7B","sourcesContent":["import React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useStore } from '../stores';\nimport { Button, BUTTON_COLOR } from '../components/button/button';\nimport { LoadingSpinner } from '../components/loading-spinner/loading-spinner';\n\nimport './checkout-form.scss';\nimport { StripeCardElementChangeEvent } from '@stripe/stripe-js';\nimport { observer } from 'mobx-react';\n\ninterface CheckoutFormProps {\n    amount: number;\n    shown: boolean;\n    onCancelButtonClick: () => void;\n    onPaySuccess: () => void;\n}\n\nexport const CheckoutForm = observer((props: CheckoutFormProps) => {\n    const store = useStore();\n    const isPaying = store.orderStore.isPaying || store.orderStore.isCreating;\n    const [complete, setComplete] = useState<boolean>(false);\n    const [isCreatingPaymentMethod, setIsCreatingPaymentMethod] = useState<boolean>(false);\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (stripe && elements) {\n            setIsCreatingPaymentMethod(true);\n            const { error, paymentMethod } = await stripe.createPaymentMethod({\n                type: \"card\",\n                card: elements.getElement(CardElement)!,\n            });\n            setIsCreatingPaymentMethod(false);\n    \n            if (!error) {\n                if (paymentMethod) {\n                    if (await store.orderStore.pay(paymentMethod.id, props.amount)) {\n                        props.onPaySuccess();\n                    }\n                }\n            } else {\n                console.log(error.message);\n            }\n        }\n    };\n\n    const handleChange = ({ complete }: StripeCardElementChangeEvent) => {\n        setComplete(complete);\n    };\n\n    return (\n        <div className={`checkout-form ${props.shown ? 'shown' : ''}`}>\n            <form onSubmit={handleSubmit}>\n                <CardElement onChange={handleChange}/>\n                <div className=\"buttons\">\n                    <Button color={BUTTON_COLOR.ORANGE} onClick={props.onCancelButtonClick}>\n                        Cancel\n                    </Button>\n                    <button className={complete ? '' : 'disabled'}>\n                        {(isPaying || isCreatingPaymentMethod) ? <LoadingSpinner/> : 'Pay'}\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n});"]},"metadata":{},"sourceType":"module"}