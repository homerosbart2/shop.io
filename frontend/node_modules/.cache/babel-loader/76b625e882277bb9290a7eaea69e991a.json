{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hcampos/Documents/REACT/shop.io/frontend/src/components/context-message/context-message.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport './context-message.scss';\nexport const ContextMessage = props => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [showMessage, setShowMessage] = useState(false);\n  useEffect(() => {\n    if (props.message) {\n      const isShowingMessage = showMessage;\n      setMessage(props.message);\n      setShowMessage(true);\n\n      if (!isShowingMessage) {\n        const timeoutId = window.setTimeout(() => {\n          setShowMessage(false);\n          window.setTimeout(() => {\n            setMessage('');\n          }, 300);\n        }, 3000);\n        return () => {\n          window.clearTimeout(timeoutId);\n        };\n      }\n    }\n  }, [props.message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `context-message ${showMessage ? 'shown' : ''}`,\n    children: message || ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextMessage, \"Ei7WruBjFYEwktQF0ipX9PXfKaM=\");\n\n_c = ContextMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextMessage\");","map":{"version":3,"sources":["/Users/hcampos/Documents/REACT/shop.io/frontend/src/components/context-message/context-message.tsx"],"names":["React","useEffect","useState","ContextMessage","props","message","setMessage","showMessage","setShowMessage","isShowingMessage","timeoutId","window","setTimeout","clearTimeout"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,wBAAP;AAMA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAgC;AAAA;;AAC1D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAU,KAAV,CAA9C;AAEAD,EAAAA,SAAS,CACL,MAAM;AACF,QAAIG,KAAK,CAACC,OAAV,EAAmB;AACf,YAAMI,gBAAgB,GAAGF,WAAzB;AACAD,MAAAA,UAAU,CAACF,KAAK,CAACC,OAAP,CAAV;AACAG,MAAAA,cAAc,CAAC,IAAD,CAAd;;AAEA,UAAI,CAACC,gBAAL,EAAuB;AACnB,cAAMC,SAAS,GAAGC,MAAM,CAACC,UAAP,CACd,MAAM;AACFJ,UAAAA,cAAc,CAAC,KAAD,CAAd;AAEAG,UAAAA,MAAM,CAACC,UAAP,CACI,MAAM;AACFN,YAAAA,UAAU,CAAC,EAAD,CAAV;AACH,WAHL,EAII,GAJJ;AAMH,SAVa,EAWd,IAXc,CAAlB;AAcA,eAAO,MAAM;AACTK,UAAAA,MAAM,CAACE,YAAP,CAAoBH,SAApB;AACH,SAFD;AAGH;AACJ;AACJ,GA3BI,EA4BL,CAACN,KAAK,CAACC,OAAP,CA5BK,CAAT;AA+BA,sBACI;AAAK,IAAA,SAAS,EAAG,mBAAkBE,WAAW,GAAG,OAAH,GAAa,EAAG,EAA9D;AAAA,cACKF,OAAO,IAAI;AADhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCM;;GAAMF,c;;KAAAA,c","sourcesContent":["import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport './context-message.scss';\n\ninterface ContextMessageProps {\n    message: string;\n}\n\nexport const ContextMessage = (props: ContextMessageProps) => {\n    const [message, setMessage] = useState<string>('');\n    const [showMessage, setShowMessage] = useState<boolean>(false);\n\n    useEffect(\n        () => {\n            if (props.message) {\n                const isShowingMessage = showMessage;\n                setMessage(props.message);\n                setShowMessage(true);\n\n                if (!isShowingMessage) {\n                    const timeoutId = window.setTimeout(\n                        () => {\n                            setShowMessage(false);\n\n                            window.setTimeout(\n                                () => {\n                                    setMessage('');\n                                },\n                                300,\n                            )\n                        },\n                        3000,\n                    )\n    \n                    return () => {\n                        window.clearTimeout(timeoutId);\n                    }\n                }\n            }\n        },\n        [props.message],\n    );\n\n    return (\n        <div className={`context-message ${showMessage ? 'shown' : ''}`}>\n            {message || ''}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}