{"ast":null,"code":"import { makeAutoObservable, runInAction } from 'mobx';\nimport { getApi } from '../util/http';\nexport class ProductStore {\n  constructor() {\n    this.products = [];\n    this.isIndexing = false;\n\n    this.index = async () => {\n      this.isIndexing = true;\n      const response = await getApi(this.path);\n      runInAction(() => {\n        if (response.successful && response.data) {\n          this.products = response.data;\n        }\n      });\n      this.isIndexing = false;\n      return response.successful;\n    };\n\n    makeAutoObservable(this);\n  }\n\n  get mappedProducts() {\n    return this.products.reduce((mappedProducts, product) => ({ ...mappedProducts,\n      [product.id]: product\n    }), {});\n  }\n\n  get path() {\n    return 'product';\n  }\n\n}","map":{"version":3,"sources":["/Users/hcampos/Documents/REACT/shop.io/frontend/src/stores/product-store.ts"],"names":["makeAutoObservable","runInAction","getApi","ProductStore","constructor","products","isIndexing","index","response","path","successful","data","mappedProducts","reduce","product","id"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,WAA7B,QAAgD,MAAhD;AAEA,SAASC,MAAT,QAAuB,cAAvB;AAGA,OAAO,MAAMC,YAAN,CAAmB;AAItBC,EAAAA,WAAW,GAAG;AAAA,SAHdC,QAGc,GAHQ,EAGR;AAAA,SAFdC,UAEc,GAFD,KAEC;;AAAA,SAkBdC,KAlBc,GAkBN,YAAY;AAChB,WAAKD,UAAL,GAAkB,IAAlB;AAEA,YAAME,QAAQ,GAAG,MAAMN,MAAM,CAAY,KAAKO,IAAjB,CAA7B;AACAR,MAAAA,WAAW,CAAC,MAAM;AACd,YAAIO,QAAQ,CAACE,UAAT,IAAuBF,QAAQ,CAACG,IAApC,EAA0C;AACtC,eAAKN,QAAL,GAAgBG,QAAQ,CAACG,IAAzB;AACH;AACJ,OAJU,CAAX;AAMA,WAAKL,UAAL,GAAkB,KAAlB;AAEA,aAAOE,QAAQ,CAACE,UAAhB;AACH,KA/Ba;;AACVV,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,MAAIY,cAAJ,GAAqB;AACjB,WAAO,KAAKP,QAAL,CAAcQ,MAAd,CACH,CAACD,cAAD,EAAiBE,OAAjB,MAA8B,EAC1B,GAAGF,cADuB;AAE1B,OAACE,OAAO,CAACC,EAAT,GAAcD;AAFY,KAA9B,CADG,EAKH,EALG,CAAP;AAOH;;AAED,MAAIL,IAAJ,GAAW;AACP,WAAO,SAAP;AACH;;AApBqB","sourcesContent":["import { makeAutoObservable, runInAction } from 'mobx';\nimport type { Product } from '../types/product';\nimport { getApi } from '../util/http';\nimport type { Mapped } from '../types/mapped';\n\nexport class ProductStore {\n    products: Product[] = [];\n    isIndexing = false;\n    \n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    get mappedProducts() {\n        return this.products.reduce(\n            (mappedProducts, product) => ({\n                ...mappedProducts,\n                [product.id]: product,\n            }),\n            {} as Required<Mapped<Product>>,\n        );\n    }\n\n    get path() {\n        return 'product';\n    }\n\n    index = async () => {\n        this.isIndexing = true;\n\n        const response = await getApi<Product[]>(this.path);\n        runInAction(() => {\n            if (response.successful && response.data) {\n                this.products = response.data;\n            }\n        });\n\n        this.isIndexing = false;\n        \n        return response.successful;\n    }\n}"]},"metadata":{},"sourceType":"module"}