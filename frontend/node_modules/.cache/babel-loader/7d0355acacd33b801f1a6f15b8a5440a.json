{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hcampos/Documents/REACT/shop.io/frontend/src/shop.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Login } from './components/login/login';\nimport { useStore } from './stores';\nimport { ProductCard } from './components/product-card/product-card';\nimport { Navbar } from './components/navbar/navbar';\nimport { observer } from 'mobx-react';\nimport { Button, BUTTON_COLOR } from './components/button/button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { StripeContainer } from './stripe/stripe-container';\nimport { ContextMessage } from './components/context-message/context-message';\nimport './shop.scss';\nexport let SHOP_MODE;\n\n(function (SHOP_MODE) {\n  SHOP_MODE[SHOP_MODE[\"CATALOGE\"] = 0] = \"CATALOGE\";\n  SHOP_MODE[SHOP_MODE[\"CART\"] = 1] = \"CART\";\n})(SHOP_MODE || (SHOP_MODE = {}));\n\nexport const Shop = observer(_c = _s(() => {\n  _s();\n\n  const store = useStore();\n  const productStore = store.productStore;\n  const products = productStore.products;\n  const mappedProducts = productStore.mappedProducts;\n  const userStore = store.userStore;\n  const user = store.userStore.user;\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [shoppingCart, setShoppingCart] = useState({});\n  const [mode, setMode] = useState(SHOP_MODE.CATALOGE);\n  const [showStripeContainer, setShowStripeContainer] = useState(false);\n  const [contextMessage, setContextMessage] = useState('');\n  useEffect(() => {\n    if (mode === SHOP_MODE.CATALOGE) {\n      productStore.index();\n    }\n  }, [mode, productStore]);\n  const {\n    inCartProductCount,\n    total\n  } = useMemo(() => {\n    return Object.entries(shoppingCart).reduce((countAndTotal, [productId, productCount]) => {\n      const product = mappedProducts[productId];\n      return {\n        inCartProductCount: countAndTotal.inCartProductCount + productCount,\n        total: product ? countAndTotal.total + productCount * product.price : 0\n      };\n    }, {\n      inCartProductCount: 0,\n      total: 0\n    });\n  }, [shoppingCart, mappedProducts]);\n\n  const handleSignIn = async (user, isNew) => {\n    let successful = false;\n\n    if (isNew) {\n      successful = await userStore.create(user);\n    } else {\n      successful = await userStore.show(user.email);\n    }\n\n    if (successful) {\n      setLoggedIn(true);\n      setMode(SHOP_MODE.CATALOGE);\n      localStorage.setItem('loggedInUserEmail', user.email);\n      const storedShoppingCart = localStorage.getItem(`shoppingCart::${user.email}`);\n\n      if (storedShoppingCart) {\n        setShoppingCart(JSON.parse(storedShoppingCart));\n      }\n    } else {}\n  };\n\n  const handleSignOut = () => {\n    setLoggedIn(false);\n    setShoppingCart({});\n    localStorage.removeItem('loggedInUserEmail');\n  };\n\n  const handleAddToCart = product => {\n    setShoppingCart(shoppingCart => {\n      const productCount = (shoppingCart[product.id] || 0) + 1;\n      const newShoppingCart = productCount <= product.quantity ? { ...shoppingCart,\n        [product.id]: productCount\n      } : shoppingCart;\n\n      if (user) {\n        localStorage.setItem(`shoppingCart::${user.email}`, JSON.stringify(newShoppingCart));\n      }\n\n      return newShoppingCart;\n    });\n  };\n\n  const handleRemoveFromCart = productId => {\n    setShoppingCart(shoppingCart => {\n      const productCount = (shoppingCart[productId] || 0) - 1;\n      const newShoppingCart = { ...shoppingCart\n      };\n\n      if (productCount === 0) {\n        delete newShoppingCart[productId];\n      } else if (productCount > 0) {\n        newShoppingCart[productId] = productCount;\n      }\n\n      if (user) {\n        localStorage.setItem(`shoppingCart::${user.email}`, JSON.stringify(newShoppingCart));\n      }\n\n      return newShoppingCart;\n    });\n  };\n\n  const handleModeChange = mode => {\n    setMode(mode);\n  };\n\n  const handleProceedButtonClick = async () => {\n    setShowStripeContainer(true);\n  };\n\n  const handleCancelButtonClick = () => {\n    setShowStripeContainer(false);\n  };\n\n  const handlePaySuccess = async () => {\n    if (user) {\n      if (await store.orderStore.create({\n        shoppingCart,\n        user\n      })) {\n        setShoppingCart({});\n        setShowStripeContainer(false);\n        localStorage.setItem(`shoppingCart::${user.email}`, JSON.stringify({}));\n      }\n\n      ;\n    }\n  };\n\n  const handleFail = message => {\n    setContextMessage(message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop\",\n    children: [/*#__PURE__*/_jsxDEV(Login, {\n      loggedIn: loggedIn,\n      onSignIn: handleSignIn,\n      onFail: handleFail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `manager ${loggedIn ? 'shown' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        shopMode: mode,\n        inCartProductCount: inCartProductCount,\n        onShopModeChange: handleModeChange,\n        onSignOut: handleSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catalogue\",\n        children: products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product,\n          onAddToCart: handleAddToCart\n        }, `product-${product.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `cart ${mode === SHOP_MODE.CART ? 'shown' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"headers\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header\",\n                children: \"Subtotal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), products.length > 0 && Object.entries(shoppingCart).map(([productId, productCount]) => {\n              const product = mappedProducts[productId];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cell\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"remove-formatter\",\n                    onClick: () => handleRemoveFromCart(+productId),\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: \"minus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cell\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"quantity-formatter\",\n                    children: productCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cell\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"image-formatter\",\n                    style: {\n                      backgroundColor: product === null || product === void 0 ? void 0 : product.color\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cell\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"name-formatter\",\n                    children: product === null || product === void 0 ? void 0 : product.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cell\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"price-formatter\",\n                    children: [\"$\", (((product === null || product === void 0 ? void 0 : product.price) || 0) * productCount / 100).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 41\n                }, this)]\n              }, `row-${productId}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: BUTTON_COLOR.GREEN,\n              shown: total > 0 && !showStripeContainer,\n              onClick: handleProceedButtonClick,\n              children: \"Proceed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StripeContainer, {\n              amount: total,\n              shown: showStripeContainer,\n              onCancelButtonClick: handleCancelButtonClick,\n              onPaySuccess: handlePaySuccess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text\",\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"number\",\n                children: [\"$\", (total / 100).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContextMessage, {\n      message: contextMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n}, \"M9zk77mSb+WCB2/1JeZTfrWcuak=\", false, function () {\n  return [useStore];\n}));\n_c2 = Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["/Users/hcampos/Documents/REACT/shop.io/frontend/src/shop.tsx"],"names":["React","useEffect","useMemo","useState","Login","useStore","ProductCard","Navbar","observer","Button","BUTTON_COLOR","FontAwesomeIcon","StripeContainer","ContextMessage","SHOP_MODE","Shop","store","productStore","products","mappedProducts","userStore","user","loggedIn","setLoggedIn","shoppingCart","setShoppingCart","mode","setMode","CATALOGE","showStripeContainer","setShowStripeContainer","contextMessage","setContextMessage","index","inCartProductCount","total","Object","entries","reduce","countAndTotal","productId","productCount","product","price","handleSignIn","isNew","successful","create","show","email","localStorage","setItem","storedShoppingCart","getItem","JSON","parse","handleSignOut","removeItem","handleAddToCart","id","newShoppingCart","quantity","stringify","handleRemoveFromCart","handleModeChange","handleProceedButtonClick","handleCancelButtonClick","handlePaySuccess","orderStore","handleFail","message","map","CART","length","backgroundColor","color","name","toFixed","GREEN"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Login } from './components/login/login';\nimport { User } from './types/user';\nimport { useStore } from './stores';\nimport { ProductCard } from './components/product-card/product-card';\nimport { Navbar } from './components/navbar/navbar';\nimport { Product } from './types/product';\nimport { observer } from 'mobx-react';\nimport { Button, BUTTON_COLOR } from './components/button/button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ShoppingCart } from './types/shopping-cart';\nimport { StripeContainer } from './stripe/stripe-container';\nimport { ContextMessage } from './components/context-message/context-message';\n\nimport './shop.scss';\n\nexport enum SHOP_MODE {\n    CATALOGE,\n    CART,\n}\n\nexport const Shop = observer(() => {\n    const store = useStore();\n    const productStore = store.productStore;\n    const products = productStore.products;\n    const mappedProducts = productStore.mappedProducts;\n    const userStore = store.userStore;\n    const user = store.userStore.user;\n\n    const [loggedIn, setLoggedIn] = useState<boolean>(false);\n    const [shoppingCart, setShoppingCart] = useState<ShoppingCart>({});\n    const [mode, setMode] = useState<SHOP_MODE>(SHOP_MODE.CATALOGE);\n    const [showStripeContainer, setShowStripeContainer] = useState<boolean>(false);\n    const [contextMessage, setContextMessage] = useState<string>('');\n\n    useEffect(\n        () => {\n            if (mode === SHOP_MODE.CATALOGE) {\n                productStore.index();\n            }\n        },\n        [mode, productStore],\n    );\n\n    const { inCartProductCount, total } = useMemo(\n        () => {\n            return Object.entries(shoppingCart).reduce(\n                (countAndTotal, [productId, productCount]) => {\n                    const product = mappedProducts[productId];\n\n                    return {\n                        inCartProductCount: countAndTotal.inCartProductCount + productCount,\n                        total: product\n                            ? countAndTotal.total + (productCount * product.price)\n                            : 0,\n                    };\n                },\n                {\n                    inCartProductCount: 0,\n                    total: 0,\n                },\n            );\n        },\n        [shoppingCart, mappedProducts],\n    );\n\n    const handleSignIn = async (user: Partial<User> & Pick<User, 'email'>, isNew: boolean) => {\n        let successful = false;\n\n        if (isNew) {\n            successful = await userStore.create(user as User);\n        } else {\n            successful = await userStore.show(user.email);\n        }\n\n        if (successful) {\n            setLoggedIn(true);\n            setMode(SHOP_MODE.CATALOGE);\n            localStorage.setItem('loggedInUserEmail', user.email);\n            const storedShoppingCart = localStorage.getItem(`shoppingCart::${user.email}`);\n            if (storedShoppingCart) {\n                setShoppingCart(JSON.parse(storedShoppingCart));\n            }\n        } else {\n\n        }\n    };\n\n    const handleSignOut = () => {\n        setLoggedIn(false);\n        setShoppingCart({});\n        localStorage.removeItem('loggedInUserEmail');\n    };\n\n    const handleAddToCart = (product: Product) => {\n        setShoppingCart(shoppingCart => {\n            const productCount = (shoppingCart[product.id] || 0) + 1;\n\n            const newShoppingCart =  productCount <= product.quantity\n                ? {\n                    ...shoppingCart,\n                    [product.id]: productCount,\n                } : shoppingCart;\n\n            if (user) {\n                localStorage.setItem(`shoppingCart::${user.email}`, JSON.stringify(newShoppingCart));\n            }\n\n            return newShoppingCart;\n        });\n    };\n\n    const handleRemoveFromCart = (productId: Product['id']) => {\n        setShoppingCart(shoppingCart => {\n            const productCount = (shoppingCart[productId] || 0) - 1;\n\n            const newShoppingCart = {\n                ...shoppingCart,\n            };\n\n            if (productCount === 0) {\n                delete newShoppingCart[productId];\n            } else if (productCount > 0) {\n                newShoppingCart[productId] = productCount;\n            }\n\n            if (user) {\n                localStorage.setItem(`shoppingCart::${user.email}`, JSON.stringify(newShoppingCart));\n            }\n\n            return newShoppingCart;\n        });\n    };\n\n    const handleModeChange = (mode: SHOP_MODE) => {\n        setMode(mode);\n    };\n\n    const handleProceedButtonClick = async () => {\n        setShowStripeContainer(true);\n    };\n\n    const handleCancelButtonClick = () => {\n        setShowStripeContainer(false);\n    };\n\n    const handlePaySuccess = async () => {\n        if (user) {\n            if (await store.orderStore.create({\n                shoppingCart,\n                user,\n            })) {\n                setShoppingCart({});\n                setShowStripeContainer(false);\n                localStorage.setItem(`shoppingCart::${user.email}`, JSON.stringify({}));\n            };\n        }\n    };\n\n    const handleFail = (message: string) => {\n        setContextMessage(message);\n    };\n\n    return (\n        <div className=\"shop\">\n            <Login\n                loggedIn={loggedIn}\n                onSignIn={handleSignIn}\n                onFail={handleFail}\n            />\n            <div className={`manager ${loggedIn ? 'shown' : ''}`}>\n                <Navbar\n                    shopMode={mode}\n                    inCartProductCount={inCartProductCount}\n                    onShopModeChange={handleModeChange}\n                    onSignOut={handleSignOut}\n                />\n                <div className=\"catalogue\">\n                    {products.map(product => (\n                        <ProductCard\n                            key={`product-${product.id}`}\n                            product={product}\n                            onAddToCart={handleAddToCart}\n                        />\n                    ))}\n                </div>\n                <div className={`cart ${mode === SHOP_MODE.CART ? 'shown' : ''}`}>\n                    <div className=\"summary\">\n                        <div className=\"table\">\n                            <div className=\"headers\">\n                                <div className=\"header\"/>\n                                <div className=\"header\">\n                                    Quantity\n                                </div>\n                                <div className=\"header\">\n                                    Image\n                                </div>\n                                <div className=\"header\">\n                                    Name\n                                </div>\n                                <div className=\"header\">\n                                    Subtotal\n                                </div>\n                            </div>\n                            {products.length > 0 && Object.entries(shoppingCart).map(([productId, productCount]) => {\n                                const product = mappedProducts[productId];\n\n                                return (\n                                    <div key={`row-${productId}`} className=\"row\">\n                                        <div className=\"cell\">\n                                            <div\n                                                className=\"remove-formatter\"\n                                                onClick={() => handleRemoveFromCart(+productId)}\n                                            >\n                                                <FontAwesomeIcon icon=\"minus\"/>\n                                            </div>\n                                        </div>\n                                        <div className=\"cell\">\n                                            <div className=\"quantity-formatter\">\n                                                {productCount}\n                                            </div>\n                                        </div>\n                                        <div className=\"cell\">\n                                            <div className=\"image-formatter\" style={{ backgroundColor: product?.color }}/>\n                                        </div>\n                                        <div className=\"cell\">\n                                            <div className=\"name-formatter\">\n                                                {product?.name}\n                                            </div>\n                                        </div>\n                                        <div className=\"cell\">\n                                            <div className=\"price-formatter\">\n                                                ${(((product?.price || 0) * productCount) / 100).toFixed(2)}\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <div className=\"total\">\n                            <Button\n                                color={BUTTON_COLOR.GREEN}\n                                shown={total > 0 && !showStripeContainer}\n                                onClick={handleProceedButtonClick}\n                            >\n                                Proceed\n                            </Button>\n                            <StripeContainer\n                                amount={total}\n                                shown={showStripeContainer}\n                                onCancelButtonClick={handleCancelButtonClick}\n                                onPaySuccess={handlePaySuccess}\n                            />\n                            <div className=\"amount\">\n                                <div className=\"text\">\n                                    Total\n                                </div>\n                                <div className=\"number\">\n                                ${(total / 100).toFixed(2)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <ContextMessage message={contextMessage}/>\n        </div>\n    );\n});\n"]},"metadata":{},"sourceType":"module"}